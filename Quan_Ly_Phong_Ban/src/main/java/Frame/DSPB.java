/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package Frame;

import Model.*;
import DAO.*;
import FormatJTable.*;
import Helper.*;
import java.util.Comparator;
import java.util.Vector;
import java.util.logging.*;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Chau Thinh
 */
public class DSPB extends javax.swing.JInternalFrame {

    Vector<String> header;
    Vector data;
    /**
     * Creates new form DSPB
     */
    public DSPB() throws Exception {
        initComponents();
        tblPB.setDefaultEditor(Object.class, null);
        header = new Vector<>();
        header.add("Mã Phòng");
        header.add("Tên Phòng");
        loadData();
        tblPB.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent e) {
                int row = tblPB.getSelectedRow();
                int col = tblPB.getSelectedColumn();
                if (row >= 0 && row < tblPB.getRowCount()) {
                    txtTenPhong.setText(tblPB.getValueAt(row, 1).toString());
                }
            }
        });
    }
    
    private void loadData() throws Exception {
        if (data != null) {
            data.clear();
        }
        data = PhongBanDAO.getInstance().getVector();
        data.sort(new Comparator() {
            @Override
            public int compare(Object o1, Object o2) {
                Vector<Object> v1 = (Vector<Object>) o1;
                Vector<Object> v2 = (Vector<Object>) o2;
                return Integer.compare((int) v1.get(0), (int) v2.get(0));
            }
        });
        DefaultTableModel dml = (DefaultTableModel) tblPB.getModel();
        dml.setDataVector(data, header);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblPB = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        txtTenPhong = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        btnThem = new javax.swing.JButton();
        btnSua = new javax.swing.JButton();
        btnXoa = new javax.swing.JButton();
        btnDong = new javax.swing.JButton();

        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tblPB.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Title 1", "Title 2"
            }
        ));
        tblPB.setShowGrid(true);
        jScrollPane1.setViewportView(tblPB);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, 390, 110));

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Thông tin phòng ban"));

        jLabel2.setText("Tên Phòng:");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jLabel2)
                .addGap(28, 28, 28)
                .addComponent(txtTenPhong, javax.swing.GroupLayout.DEFAULT_SIZE, 285, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtTenPhong, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(9, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 130, 410, 60));

        btnThem.setText("Thêm");
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });
        jPanel1.add(btnThem);

        btnSua.setText("Sửa");
        btnSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaActionPerformed(evt);
            }
        });
        jPanel1.add(btnSua);

        btnXoa.setText("Xoá");
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });
        jPanel1.add(btnXoa);

        btnDong.setText("Đóng");
        btnDong.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDongActionPerformed(evt);
            }
        });
        jPanel1.add(btnDong);

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 200, 430, 40));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        PhongBan pb = new PhongBan();
        pb.setTenPHG(txtTenPhong.getText());
        try {
            if (PhongBanDAO.getInstance().checkInput(this, pb)) {
                if (PhongBanDAO.getInstance().addPhongBan(pb)) {
                    loadData();
                    txtTenPhong.setText("");
                    ControlHelper.getInstance().showMessageInfomation(this, "Thêm thành công", "Thông báo");
                } else {
                    ControlHelper.getInstance().showMessageError(this, "Thêm thất bại", "Thông báo");
                }
            }
        } catch (Exception ex) {
            Logger.getLogger(DSPB.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnThemActionPerformed

    private void btnSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaActionPerformed
        int row = tblPB.getSelectedRow();
        if (row >= 0 && row < tblPB.getRowCount()) {
            try {
                PhongBan pb = new PhongBan();
                pb.setMaPHG(Integer.parseInt(tblPB.getValueAt(row, 0).toString()));
                pb.setTenPHG(txtTenPhong.getText());
                if (!PhongBanDAO.getInstance().checkExistsByID(pb)) {
                    ControlHelper.getInstance().showMessageError(this, "Chọn phòng ban để cập nhật", "Thông báo");
                    return;
                }
                if (PhongBanDAO.getInstance().checkInput(this, pb)) {
                    if (PhongBanDAO.getInstance().updatePhongBan(pb)) {
                        loadData();
                        txtTenPhong.setText("");
                        ControlHelper.getInstance().showMessageInfomation(this, "Cập nhật thành công", "Thông báo");
                    } else {
                        ControlHelper.getInstance().showMessageError(this, "Cập nhật thất bại", "Thông báo");
                    }
                }
            } catch (Exception ex) {
                ControlHelper.getInstance().showMessageError(this, "Lỗi lấy mã phòng", "Thông báo");
            }
        } else {
            ControlHelper.getInstance().showMessageError(this, "Vui lòng chọn dòng cần sửa", "Thông báo");
        }
    }//GEN-LAST:event_btnSuaActionPerformed

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        int row = tblPB.getSelectedRow();
        if (row >= 0 && row < tblPB.getRowCount()) {
            try {
                PhongBan pb = new PhongBan();
                pb.setMaPHG(Integer.parseInt(tblPB.getValueAt(row, 0).toString()));
                if (!PhongBanDAO.getInstance().checkExistsByID(pb)) {
                    ControlHelper.getInstance().showMessageError(this, "Chọn phòng ban để cập nhật", "Thông báo");
                    return;
                }
                if (ControlHelper.getInstance().confirmYN(this,
                    "Bạn có chắc chắn xoá Mã: " + pb.getMaPHG() + " ?", "Thông báo")) {
                if (PhongBanDAO.getInstance().deletePhongBan(pb)) {
                    data.remove(row);
                    txtTenPhong.setText("");
                    tblPB.updateUI();
                    ControlHelper.getInstance().showMessageInfomation(this, "Xoá thành công", "Thông báo");
                } else {
                    ControlHelper.getInstance().showMessageError(this, "Xoá thất bại", "Thông báo");
                }
            }
        } catch (Exception ex) {
            ControlHelper.getInstance().showMessageError(this, "Lỗi lấy mã phòng", "Thông báo");
        }
        } else {
            ControlHelper.getInstance().showMessageError(this, "Vui lòng chọn dòng cần xoá", "Thông báo");
        }
    }//GEN-LAST:event_btnXoaActionPerformed

    private void btnDongActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDongActionPerformed
        this.setVisible(false);
    }//GEN-LAST:event_btnDongActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDong;
    private javax.swing.JButton btnSua;
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnXoa;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblPB;
    private javax.swing.JTextField txtTenPhong;
    // End of variables declaration//GEN-END:variables
}
